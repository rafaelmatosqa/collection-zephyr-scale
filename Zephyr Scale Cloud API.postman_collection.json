{
	"info": {
		"_postman_id": "ef33844e-80a9-4616-9e0c-b3cb9801af05",
		"name": "Zephyr Scale Cloud API",
		"description": "\n# Introduction\n\nThis is the **Zephyr Scale Cloud** API. If you are looking for the Server API, please refer to the [documentation](https://support.smartbear.com/zephyr-scale-server/docs/) for more information.\n\nThis API uses the OpenAPI specification. If you want to generate clients for different languages, please use the link above to download the API specification and use it with your preferred tools.\n\nFor feature requests or general support, please head to our [support site](https://smartbear.atlassian.net/servicedesk/customer/portal/42).\n\n# Authentication\nThe API authentication is based on JSON Web Token (JWT), which is a key for accessing the API. Authenticating using JWT requires the following steps:\n* Generate a key\n* Make authenticated requests\n\n## Generate a Key\nFor accessing the API, you must generate an access key in Jira. To generate an access token, click on your profile picture at the page bottom left, and\nchoose the option “Zephyr Scale API keys\". For more information, please check out the [documentation](https://support.smartbear.com/zephyr-scale-cloud/docs/api-and-test-automation/generating-access-keys.html).\n\n## Accessing the API\nThe API is available at the following base URL:\n```\nhttps://api.zephyrscale.smartbear.com/v2\n```\nFor example, the final URL for retrieving test cases would be:\n```\nhttps://api.zephyrscale.smartbear.com/v2/testcases\n```\n\n## Making Authenticated Requests\nTo authenticate subsequent API requests, you must provide a valid token in an HTTP header, which is the key generated on the previous step:\n```\nAuthorization: Bearer {bearer_token}\n```\n# Representing Users\n\nPrevious API definitions used Atlassian User Keys to identify users. This parameter is deprecated because of privacy\nchanges. Use Atlassian Account ID instead.\n\n\nAtlassian Account IDs are globally unique opaque identifiers for identifying a user. Every Atlassian Account has a\nID which is assigned when the account is created and is immutable. Account IDs contain no personally identifiable\ninformation and are only used to retrieve user information ondemand. This API does not return any user information\nother than the Account ID (with the exception of the deprecated user keys during the deprecation period).\n\n\nContact Support:\n Name: SmartBear - Zephyr Scale Support",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "testcases",
			"item": [
				{
					"name": "{testCaseKey}",
					"item": [
						{
							"name": "links",
							"item": [
								{
									"name": "Get links",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/testcases/:testCaseKey/links",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testcases",
												":testCaseKey",
												"links"
											],
											"variable": [
												{
													"key": "testCaseKey",
													"value": "h!&qvIx-T462",
													"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
												}
											]
										},
										"description": "Returns links for a test case with specified key."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/testcases/:testCaseKey/links",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcases",
														":testCaseKey",
														"links"
													],
													"variable": [
														{
															"key": "testCaseKey",
															"value": "h!&qvIx-T462",
															"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"self\": \"quis reprehenderit proident minim\",\n  \"issues\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"webLinks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"name": "An error has occurred. Please check the code and the error message.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/testcases/:testCaseKey/links",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcases",
														":testCaseKey",
														"links"
													],
													"variable": [
														{
															"key": "testCaseKey",
															"value": "h!&qvIx-T462",
															"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
										}
									]
								},
								{
									"name": "Create issue link",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"issueId\": 10100\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/testcases/:testCaseKey/links/issues",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testcases",
												":testCaseKey",
												"links",
												"issues"
											],
											"variable": [
												{
													"key": "testCaseKey",
													"value": "h!&qvIx-T462",
													"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
												}
											]
										},
										"description": "Creates a link between a test case and a Jira issue."
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"issueId\": 10100\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/testcases/:testCaseKey/links/issues",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcases",
														":testCaseKey",
														"links",
														"issues"
													],
													"variable": [
														{
															"key": "testCaseKey",
															"value": "h!&qvIx-T462",
															"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": 1,\n  \"self\": \"elit \"\n}"
										},
										{
											"name": "An error has occurred. Please check the code and the error message.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"issueId\": 10100\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/testcases/:testCaseKey/links/issues",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcases",
														":testCaseKey",
														"links",
														"issues"
													],
													"variable": [
														{
															"key": "testCaseKey",
															"value": "h!&qvIx-T462",
															"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
										}
									]
								},
								{
									"name": "Create web link",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"url\": \"https://atlassian.com\",\n  \"description\": \"A link to atlassian.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/testcases/:testCaseKey/links/weblinks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testcases",
												":testCaseKey",
												"links",
												"weblinks"
											],
											"variable": [
												{
													"key": "testCaseKey",
													"value": "h!&qvIx-T462",
													"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
												}
											]
										},
										"description": "Creates a link between a test case and a generic URL."
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"url\": \"https://atlassian.com\",\n  \"description\": \"A link to atlassian.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/testcases/:testCaseKey/links/weblinks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcases",
														":testCaseKey",
														"links",
														"weblinks"
													],
													"variable": [
														{
															"key": "testCaseKey",
															"value": "h!&qvIx-T462",
															"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": 1,\n  \"self\": \"elit \"\n}"
										},
										{
											"name": "An error has occurred. Please check the code and the error message.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"url\": \"https://atlassian.com\",\n  \"description\": \"A link to atlassian.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/testcases/:testCaseKey/links/weblinks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcases",
														":testCaseKey",
														"links",
														"weblinks"
													],
													"variable": [
														{
															"key": "testCaseKey",
															"value": "h!&qvIx-T462",
															"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "versions",
							"item": [
								{
									"name": "Get versions",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/testcases/:testCaseKey/versions?maxResults=10&startAt=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testcases",
												":testCaseKey",
												"versions"
											],
											"query": [
												{
													"key": "maxResults",
													"value": "10",
													"description": "A hint as to the maximum number of results to return in each call. Note that the server reserves the right to impose a maxResults limit that is lower than the value that a client provides, due to lack or resources or any other condition. When this happens, your results will be truncated. Callers should always check the returned maxResults to determine the value that is effectively being used."
												},
												{
													"key": "startAt",
													"value": "0",
													"description": "Zero-indexed starting position. Should be a multiple of maxResults."
												}
											],
											"variable": [
												{
													"key": "testCaseKey",
													"value": "h!&qvIx-T462",
													"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
												}
											]
										},
										"description": "Returns all test case versions for a test case with specified key. Response is ordered by most recent first."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/testcases/:testCaseKey/versions?maxResults=10&startAt=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcases",
														":testCaseKey",
														"versions"
													],
													"query": [
														{
															"key": "maxResults",
															"value": "10"
														},
														{
															"key": "startAt",
															"value": "0"
														}
													],
													"variable": [
														{
															"key": "testCaseKey",
															"value": "h!&qvIx-T462",
															"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"maxResults\": 1,\n  \"startAt\": 8511668,\n  \"next\": \"do ex qui nulla\",\n  \"total\": 1,\n  \"isLast\": true,\n  \"values\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"name": "An error has occurred. Please check the code and the error message.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/testcases/:testCaseKey/versions?maxResults=10&startAt=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcases",
														":testCaseKey",
														"versions"
													],
													"query": [
														{
															"key": "maxResults",
															"value": "10"
														},
														{
															"key": "startAt",
															"value": "0"
														}
													],
													"variable": [
														{
															"key": "testCaseKey",
															"value": "h!&qvIx-T462",
															"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
										}
									]
								},
								{
									"name": "Get version",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/testcases/:testCaseKey/versions/:version",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testcases",
												":testCaseKey",
												"versions",
												":version"
											],
											"variable": [
												{
													"key": "testCaseKey",
													"value": "h!&qvIx-T462",
													"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
												},
												{
													"key": "version",
													"value": "63245717",
													"description": "(Required) Version of the test case to retrieve."
												}
											]
										},
										"description": "Retrieves a specific version of a test case."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/testcases/:testCaseKey/versions/:version",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcases",
														":testCaseKey",
														"versions",
														":version"
													],
													"variable": [
														{
															"key": "testCaseKey",
															"value": "h!&qvIx-T462",
															"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
														},
														{
															"key": "version",
															"value": "63245717",
															"description": "(Required) Version of the test case to retrieve."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": 1,\n  \"key\": \"SA-T10\",\n  \"name\": \"Check axial pump\",\n  \"priority\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"project\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"status\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"createdOn\": \"1956-09-03T10:03:21.714Z\",\n  \"objective\": \"To ensure the axial pump can be enabled\",\n  \"precondition\": \"Latest version of the axial pump available\",\n  \"estimatedTime\": 138000,\n  \"labels\": [\n    \"Regression\",\n    \"Performance\",\n    \"Automated\"\n  ],\n  \"component\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"folder\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"owner\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"testScript\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"customFields\": {\n    \"adipisicing_05\": {}\n  },\n  \"links\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"issues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"webLinks\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
										},
										{
											"name": "An error has occurred. Please check the code and the error message.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/testcases/:testCaseKey/versions/:version",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcases",
														":testCaseKey",
														"versions",
														":version"
													],
													"variable": [
														{
															"key": "testCaseKey",
															"value": "h!&qvIx-T462",
															"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
														},
														{
															"key": "version",
															"value": "63245717",
															"description": "(Required) Version of the test case to retrieve."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "testscript",
							"item": [
								{
									"name": "Get test script",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/testcases/:testCaseKey/testscript",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testcases",
												":testCaseKey",
												"testscript"
											],
											"variable": [
												{
													"key": "testCaseKey",
													"value": "h!&qvIx-T462",
													"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
												}
											]
										},
										"description": "Returns the test script for the given test case"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/testcases/:testCaseKey/testscript",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcases",
														":testCaseKey",
														"testscript"
													],
													"variable": [
														{
															"key": "testCaseKey",
															"value": "h!&qvIx-T462",
															"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"text\": \"e.g. Attempt to login to the application\",\n  \"type\": \"plain\",\n  \"id\": 1\n}"
										},
										{
											"name": "An error has occurred. Please check the code and the error message.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/testcases/:testCaseKey/testscript",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcases",
														":testCaseKey",
														"testscript"
													],
													"variable": [
														{
															"key": "testCaseKey",
															"value": "h!&qvIx-T462",
															"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
										}
									]
								},
								{
									"name": "Create test script",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"e.g. Attempt to login to the application\",\n  \"type\": \"plain\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/testcases/:testCaseKey/testscript",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testcases",
												":testCaseKey",
												"testscript"
											],
											"variable": [
												{
													"key": "testCaseKey",
													"value": "h!&qvIx-T462",
													"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
												}
											]
										},
										"description": "Creates or updates the test script for a test case. If the test case currently has a sequence of test steps assigned to it, these will be implicitly removed."
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"text\": \"e.g. Attempt to login to the application\",\n  \"type\": \"plain\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/testcases/:testCaseKey/testscript",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcases",
														":testCaseKey",
														"testscript"
													],
													"variable": [
														{
															"key": "testCaseKey",
															"value": "h!&qvIx-T462",
															"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": 1,\n  \"self\": \"elit \"\n}"
										},
										{
											"name": "An error has occurred. Please check the code and the error message.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"text\": \"e.g. Attempt to login to the application\",\n  \"type\": \"plain\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/testcases/:testCaseKey/testscript",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcases",
														":testCaseKey",
														"testscript"
													],
													"variable": [
														{
															"key": "testCaseKey",
															"value": "h!&qvIx-T462",
															"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "teststeps",
							"item": [
								{
									"name": "Get test steps",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/testcases/:testCaseKey/teststeps?maxResults=10&startAt=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testcases",
												":testCaseKey",
												"teststeps"
											],
											"query": [
												{
													"key": "maxResults",
													"value": "10",
													"description": "A hint as to the maximum number of results to return in each call. Note that the server reserves the right to impose a maxResults limit that is lower than the value that a client provides, due to lack or resources or any other condition. When this happens, your results will be truncated. Callers should always check the returned maxResults to determine the value that is effectively being used."
												},
												{
													"key": "startAt",
													"value": "0",
													"description": "Zero-indexed starting position. Should be a multiple of maxResults."
												}
											],
											"variable": [
												{
													"key": "testCaseKey",
													"value": "h!&qvIx-T462",
													"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
												}
											]
										},
										"description": "Returns the test steps for the given test case. Provides a paged response, with 100 items per page."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/testcases/:testCaseKey/teststeps?maxResults=10&startAt=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcases",
														":testCaseKey",
														"teststeps"
													],
													"query": [
														{
															"key": "maxResults",
															"value": "10"
														},
														{
															"key": "startAt",
															"value": "0"
														}
													],
													"variable": [
														{
															"key": "testCaseKey",
															"value": "h!&qvIx-T462",
															"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"maxResults\": 1,\n  \"startAt\": 77119210,\n  \"next\": \"labore ex magna consequat\",\n  \"total\": 1,\n  \"isLast\": true,\n  \"values\": [\n    {\n      \"inline\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"testCase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"inline\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"testCase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
										},
										{
											"name": "An error has occurred. Please check the code and the error message.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/testcases/:testCaseKey/teststeps?maxResults=10&startAt=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcases",
														":testCaseKey",
														"teststeps"
													],
													"query": [
														{
															"key": "maxResults",
															"value": "10"
														},
														{
															"key": "startAt",
															"value": "0"
														}
													],
													"variable": [
														{
															"key": "testCaseKey",
															"value": "h!&qvIx-T462",
															"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
										}
									]
								},
								{
									"name": "Post test steps",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"items\": [\n    {\n      \"inline\": {\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"testData\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"expectedResult\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customFields\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"testCase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"inline\": {\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"testData\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"expectedResult\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customFields\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"testCase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"mode\": \"cillum cupidatat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/testcases/:testCaseKey/teststeps",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testcases",
												":testCaseKey",
												"teststeps"
											],
											"variable": [
												{
													"key": "testCaseKey",
													"value": "h!&qvIx-T462",
													"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
												}
											]
										},
										"description": "Assigns a series of test steps to a test case, appending them to any existing sequence of test steps. A maximum of 100 steps can be posted per request. Consumers should not attempt to parallelize this operation, as the order of the steps is defined by the input order. If this endpoint is called on a test case that already has a plain text or BDD test script, that test script will implicitly be removed. All required step custom fields should be present in the request.\n"
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"items\": [\n    {\n      \"inline\": {\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"testData\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"expectedResult\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customFields\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"testCase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"inline\": {\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"testData\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"expectedResult\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customFields\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"testCase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"mode\": \"nostrud cupidatat\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/testcases/:testCaseKey/teststeps",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcases",
														":testCaseKey",
														"teststeps"
													],
													"variable": [
														{
															"key": "testCaseKey",
															"value": "h!&qvIx-T462",
															"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": 1,\n  \"self\": \"elit \"\n}"
										},
										{
											"name": "An error has occurred. Please check the code and the error message.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"items\": [\n    {\n      \"inline\": {\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"testData\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"expectedResult\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customFields\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"testCase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"inline\": {\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"testData\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"expectedResult\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customFields\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"testCase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"mode\": \"nostrud cupidatat\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/testcases/:testCaseKey/teststeps",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcases",
														":testCaseKey",
														"teststeps"
													],
													"variable": [
														{
															"key": "testCaseKey",
															"value": "h!&qvIx-T462",
															"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get test case",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/testcases/:testCaseKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"testcases",
										":testCaseKey"
									],
									"variable": [
										{
											"key": "testCaseKey",
											"value": "h!&qvIx-T462",
											"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
										}
									]
								},
								"description": "Returns a test case for the given key."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/testcases/:testCaseKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testcases",
												":testCaseKey"
											],
											"variable": [
												{
													"key": "testCaseKey",
													"value": "h!&qvIx-T462",
													"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 1,\n  \"key\": \"SA-T10\",\n  \"name\": \"Check axial pump\",\n  \"priority\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"project\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"status\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"createdOn\": \"1956-09-03T10:03:21.714Z\",\n  \"objective\": \"To ensure the axial pump can be enabled\",\n  \"precondition\": \"Latest version of the axial pump available\",\n  \"estimatedTime\": 138000,\n  \"labels\": [\n    \"Regression\",\n    \"Performance\",\n    \"Automated\"\n  ],\n  \"component\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"folder\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"owner\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"testScript\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"customFields\": {\n    \"adipisicing_05\": {}\n  },\n  \"links\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"issues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"webLinks\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
								},
								{
									"name": "An error has occurred. Please check the code and the error message.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/testcases/:testCaseKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testcases",
												":testCaseKey"
											],
											"variable": [
												{
													"key": "testCaseKey",
													"value": "h!&qvIx-T462",
													"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
								}
							]
						},
						{
							"name": "Update test case",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1,\n  \"key\": \"SA-T10\",\n  \"name\": \"Check axial pump\",\n  \"priority\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"project\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"status\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"createdOn\": \"1956-09-03T10:03:21.714Z\",\n  \"objective\": \"To ensure the axial pump can be enabled\",\n  \"precondition\": \"Latest version of the axial pump available\",\n  \"estimatedTime\": 138000,\n  \"labels\": [\n    \"Regression\",\n    \"Performance\",\n    \"Automated\"\n  ],\n  \"component\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"folder\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"owner\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"testScript\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"customFields\": {\n    \"adipisicing_05\": {}\n  },\n  \"links\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"issues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"webLinks\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/testcases/:testCaseKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"testcases",
										":testCaseKey"
									],
									"variable": [
										{
											"key": "testCaseKey",
											"value": "h!&qvIx-T462",
											"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
										}
									]
								},
								"description": "Updates an existing test case. If the project has test case custom fields, all custom fields should be present in the request. To leave any of them blank, please set them null if they are not required custom fields.\n"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 1,\n  \"key\": \"SA-T10\",\n  \"name\": \"Check axial pump\",\n  \"priority\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"project\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"status\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"createdOn\": \"1956-09-03T10:03:21.714Z\",\n  \"objective\": \"To ensure the axial pump can be enabled\",\n  \"precondition\": \"Latest version of the axial pump available\",\n  \"estimatedTime\": 138000,\n  \"labels\": [\n    \"Regression\",\n    \"Performance\",\n    \"Automated\"\n  ],\n  \"component\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"folder\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"owner\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"testScript\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"customFields\": {\n    \"adipisicing_05\": {}\n  },\n  \"links\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"issues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"webLinks\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/testcases/:testCaseKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testcases",
												":testCaseKey"
											],
											"variable": [
												{
													"key": "testCaseKey",
													"value": "h!&qvIx-T462",
													"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An error has occurred. Please check the code and the error message.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 1,\n  \"key\": \"SA-T10\",\n  \"name\": \"Check axial pump\",\n  \"priority\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"project\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"status\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"createdOn\": \"1956-09-03T10:03:21.714Z\",\n  \"objective\": \"To ensure the axial pump can be enabled\",\n  \"precondition\": \"Latest version of the axial pump available\",\n  \"estimatedTime\": 138000,\n  \"labels\": [\n    \"Regression\",\n    \"Performance\",\n    \"Automated\"\n  ],\n  \"component\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"folder\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"owner\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"testScript\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"customFields\": {\n    \"adipisicing_05\": {}\n  },\n  \"links\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"issues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"webLinks\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/testcases/:testCaseKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testcases",
												":testCaseKey"
											],
											"variable": [
												{
													"key": "testCaseKey",
													"value": "h!&qvIx-T462",
													"description": "(Required) The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get test cases",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/testcases?projectKey=NL181IQFL&folderId=67793148&maxResults=10&startAt=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"testcases"
							],
							"query": [
								{
									"key": "projectKey",
									"value": "NL181IQFL",
									"description": "Jira project key filter"
								},
								{
									"key": "folderId",
									"value": "67793148",
									"description": "Folder ID filter"
								},
								{
									"key": "maxResults",
									"value": "10",
									"description": "A hint as to the maximum number of results to return in each call. Note that the server reserves the right to impose a maxResults limit that is lower than the value that a client provides, due to lack or resources or any other condition. When this happens, your results will be truncated. Callers should always check the returned maxResults to determine the value that is effectively being used."
								},
								{
									"key": "startAt",
									"value": "0",
									"description": "Zero-indexed starting position. Should be a multiple of maxResults."
								}
							]
						},
						"description": "Retrieves all test cases. Query parameters can be used to filter the results."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/testcases?projectKey=NL181IQFL&folderId=67793148&maxResults=10&startAt=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"testcases"
									],
									"query": [
										{
											"key": "projectKey",
											"value": "NL181IQFL"
										},
										{
											"key": "folderId",
											"value": "67793148"
										},
										{
											"key": "maxResults",
											"value": "10"
										},
										{
											"key": "startAt",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"maxResults\": 1,\n  \"startAt\": 96658763,\n  \"next\": \"fugiat sit\",\n  \"total\": 1,\n  \"isLast\": true,\n  \"values\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"priority\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"project\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createdOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objective\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"precondition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"estimatedTime\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"component\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"folder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"testScript\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"links\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"priority\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"project\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createdOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objective\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"precondition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"estimatedTime\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"component\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"folder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"testScript\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"links\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/testcases?projectKey=NL181IQFL&folderId=67793148&maxResults=10&startAt=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"testcases"
									],
									"query": [
										{
											"key": "projectKey",
											"value": "NL181IQFL"
										},
										{
											"key": "folderId",
											"value": "67793148"
										},
										{
											"key": "maxResults",
											"value": "10"
										},
										{
											"key": "startAt",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				},
				{
					"name": "Create test case",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Check axial pump\",\n  \"projectKey\": \"TIS\",\n  \"objective\": \"To ensure the axial pump can be enabled\",\n  \"precondition\": \"Latest version of the axial pump available\",\n  \"estimatedTime\": 138000,\n  \"componentId\": 10001,\n  \"priorityName\": \"Critical\",\n  \"statusName\": \"Low\",\n  \"folderId\": 83843863,\n  \"ownerId\": \"5b10a2844c20165700ede21g\",\n  \"labels\": [\n    \"Regression\",\n    \"Performance\",\n    \"Automated\"\n  ],\n  \"customFields\": {\n    \"in459\": {},\n    \"eiusmodc\": {},\n    \"fugiat658\": {},\n    \"aliqua_e38\": {}\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/testcases",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"testcases"
							]
						},
						"description": "Creates a test case. Fields `priorityName` and `statusName` will be set to default values if not informed. Default values are usually “Normal” for `priorityName` and “Draft” for `statusName`. All required test case custom fields should be present in the request.\n"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Check axial pump\",\n  \"projectKey\": \"TIS\",\n  \"objective\": \"To ensure the axial pump can be enabled\",\n  \"precondition\": \"Latest version of the axial pump available\",\n  \"estimatedTime\": 138000,\n  \"componentId\": 10001,\n  \"priorityName\": \"Critical\",\n  \"statusName\": \"Low\",\n  \"folderId\": 85973472,\n  \"ownerId\": \"5b10a2844c20165700ede21g\",\n  \"labels\": [\n    \"Regression\",\n    \"Performance\",\n    \"Automated\"\n  ],\n  \"customFields\": {\n    \"eua7_\": {},\n    \"laboreef6\": {}\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/testcases",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"testcases"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": 1,\n  \"self\": \"qui et anim\",\n  \"key\": \"do officia Ut anim\"\n}"
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Check axial pump\",\n  \"projectKey\": \"TIS\",\n  \"objective\": \"To ensure the axial pump can be enabled\",\n  \"precondition\": \"Latest version of the axial pump available\",\n  \"estimatedTime\": 138000,\n  \"componentId\": 10001,\n  \"priorityName\": \"Critical\",\n  \"statusName\": \"Low\",\n  \"folderId\": 85973472,\n  \"ownerId\": \"5b10a2844c20165700ede21g\",\n  \"labels\": [\n    \"Regression\",\n    \"Performance\",\n    \"Automated\"\n  ],\n  \"customFields\": {\n    \"eua7_\": {},\n    \"laboreef6\": {}\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/testcases",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"testcases"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "testcycles",
			"item": [
				{
					"name": "{testCycleIdOrKey}",
					"item": [
						{
							"name": "links",
							"item": [
								{
									"name": "Get links",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/testcycles/:testCycleIdOrKey/links",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testcycles",
												":testCycleIdOrKey",
												"links"
											],
											"variable": [
												{
													"key": "testCycleIdOrKey",
													"value": "202831",
													"description": "(Required) The ID or key of the test cycle. Test cycle keys are of the format [A-Z]+-R[0-9]+"
												}
											]
										},
										"description": "Returns links for a test cycle with specified key."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/testcycles/:testCycleIdOrKey/links",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcycles",
														":testCycleIdOrKey",
														"links"
													],
													"variable": [
														{
															"key": "testCycleIdOrKey",
															"value": "202831",
															"description": "(Required) The ID or key of the test cycle. Test cycle keys are of the format [A-Z]+-R[0-9]+"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"self\": \"amet dolore sit mollit\",\n  \"issues\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"webLinks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"testPlans\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"name": "An error has occurred. Please check the code and the error message.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/testcycles/:testCycleIdOrKey/links",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcycles",
														":testCycleIdOrKey",
														"links"
													],
													"variable": [
														{
															"key": "testCycleIdOrKey",
															"value": "202831",
															"description": "(Required) The ID or key of the test cycle. Test cycle keys are of the format [A-Z]+-R[0-9]+"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
										}
									]
								},
								{
									"name": "Create issue link",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"issueId\": 10100\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/testcycles/:testCycleIdOrKey/links/issues",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testcycles",
												":testCycleIdOrKey",
												"links",
												"issues"
											],
											"variable": [
												{
													"key": "testCycleIdOrKey",
													"value": "202831",
													"description": "(Required) The ID or key of the test cycle. Test cycle keys are of the format [A-Z]+-R[0-9]+"
												}
											]
										},
										"description": "Creates a link between a test cycle and a Jira issue."
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"issueId\": 10100\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/testcycles/:testCycleIdOrKey/links/issues",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcycles",
														":testCycleIdOrKey",
														"links",
														"issues"
													],
													"variable": [
														{
															"key": "testCycleIdOrKey",
															"value": "202831",
															"description": "(Required) The ID or key of the test cycle. Test cycle keys are of the format [A-Z]+-R[0-9]+"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "location",
													"value": "mollit voluptate",
													"description": "URL of the created link"
												},
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An error has occurred. Please check the code and the error message.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"issueId\": 10100\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/testcycles/:testCycleIdOrKey/links/issues",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcycles",
														":testCycleIdOrKey",
														"links",
														"issues"
													],
													"variable": [
														{
															"key": "testCycleIdOrKey",
															"value": "202831",
															"description": "(Required) The ID or key of the test cycle. Test cycle keys are of the format [A-Z]+-R[0-9]+"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
										}
									]
								},
								{
									"name": "Create web link",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"url\": \"https://atlassian.com\",\n  \"description\": \"A link to atlassian.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/testcycles/:testCycleIdOrKey/links/weblinks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testcycles",
												":testCycleIdOrKey",
												"links",
												"weblinks"
											],
											"variable": [
												{
													"key": "testCycleIdOrKey",
													"value": "202831",
													"description": "(Required) The ID or key of the test cycle. Test cycle keys are of the format [A-Z]+-R[0-9]+"
												}
											]
										},
										"description": "Creates a link between a test cycle and a generic URL."
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"url\": \"https://atlassian.com\",\n  \"description\": \"A link to atlassian.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/testcycles/:testCycleIdOrKey/links/weblinks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcycles",
														":testCycleIdOrKey",
														"links",
														"weblinks"
													],
													"variable": [
														{
															"key": "testCycleIdOrKey",
															"value": "202831",
															"description": "(Required) The ID or key of the test cycle. Test cycle keys are of the format [A-Z]+-R[0-9]+"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "location",
													"value": "mollit voluptate",
													"description": "URL of the created link"
												},
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An error has occurred. Please check the code and the error message.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"url\": \"https://atlassian.com\",\n  \"description\": \"A link to atlassian.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/testcycles/:testCycleIdOrKey/links/weblinks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testcycles",
														":testCycleIdOrKey",
														"links",
														"weblinks"
													],
													"variable": [
														{
															"key": "testCycleIdOrKey",
															"value": "202831",
															"description": "(Required) The ID or key of the test cycle. Test cycle keys are of the format [A-Z]+-R[0-9]+"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get test cycle",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/testcycles/:testCycleIdOrKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"testcycles",
										":testCycleIdOrKey"
									],
									"variable": [
										{
											"key": "testCycleIdOrKey",
											"value": "202831",
											"description": "(Required) The ID or key of the test cycle. Test cycle keys are of the format [A-Z]+-R[0-9]+"
										}
									]
								},
								"description": "Returns a test cycle for the given key."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/testcycles/:testCycleIdOrKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testcycles",
												":testCycleIdOrKey"
											],
											"variable": [
												{
													"key": "testCycleIdOrKey",
													"value": "202831",
													"description": "(Required) The ID or key of the test cycle. Test cycle keys are of the format [A-Z]+-R[0-9]+"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 1,\n  \"key\": \"SA-R40\",\n  \"name\": \"Sprint 1 Regression Test Cycle\",\n  \"project\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"status\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"jiraProjectVersion\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"folder\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"description\": \"Regression test cycle 1 to ensure no breaking changes\",\n  \"plannedStartDate\": \"1986-12-10T00:54:26.204Z\",\n  \"plannedEndDate\": \"1992-12-21T13:30:44.156Z\",\n  \"owner\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"customFields\": {\n    \"proident_ca1\": {},\n    \"ipsum_239\": {}\n  },\n  \"links\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"issues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"webLinks\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"testPlans\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
								},
								{
									"name": "An error has occurred. Please check the code and the error message.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/testcycles/:testCycleIdOrKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testcycles",
												":testCycleIdOrKey"
											],
											"variable": [
												{
													"key": "testCycleIdOrKey",
													"value": "202831",
													"description": "(Required) The ID or key of the test cycle. Test cycle keys are of the format [A-Z]+-R[0-9]+"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
								}
							]
						},
						{
							"name": "Update test cycle",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1,\n  \"key\": \"SA-R40\",\n  \"name\": \"Sprint 1 Regression Test Cycle\",\n  \"project\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"status\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"jiraProjectVersion\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"folder\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"description\": \"Regression test cycle 1 to ensure no breaking changes\",\n  \"plannedStartDate\": \"1986-12-10T00:54:26.204Z\",\n  \"plannedEndDate\": \"1992-12-21T13:30:44.156Z\",\n  \"owner\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"customFields\": {\n    \"proident_ca1\": {},\n    \"ipsum_239\": {}\n  },\n  \"links\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"issues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"webLinks\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"testPlans\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/testcycles/:testCycleIdOrKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"testcycles",
										":testCycleIdOrKey"
									],
									"variable": [
										{
											"key": "testCycleIdOrKey",
											"value": "202831",
											"description": "(Required) The ID or key of the test cycle. Test cycle keys are of the format [A-Z]+-R[0-9]+"
										}
									]
								},
								"description": "Updates an existing test cycle. If the project has test cycle custom fields, all custom fields should be present in the request. To leave any of them blank, please set them null if they are not required custom fields.\n"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 1,\n  \"key\": \"SA-R40\",\n  \"name\": \"Sprint 1 Regression Test Cycle\",\n  \"project\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"status\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"jiraProjectVersion\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"folder\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"description\": \"Regression test cycle 1 to ensure no breaking changes\",\n  \"plannedStartDate\": \"1986-12-10T00:54:26.204Z\",\n  \"plannedEndDate\": \"1992-12-21T13:30:44.156Z\",\n  \"owner\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"customFields\": {\n    \"proident_ca1\": {},\n    \"ipsum_239\": {}\n  },\n  \"links\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"issues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"webLinks\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"testPlans\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/testcycles/:testCycleIdOrKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testcycles",
												":testCycleIdOrKey"
											],
											"variable": [
												{
													"key": "testCycleIdOrKey",
													"value": "202831",
													"description": "(Required) The ID or key of the test cycle. Test cycle keys are of the format [A-Z]+-R[0-9]+"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "location",
											"value": "mollit voluptate",
											"description": "URL of the updated Test Cycle"
										},
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An error has occurred. Please check the code and the error message.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 1,\n  \"key\": \"SA-R40\",\n  \"name\": \"Sprint 1 Regression Test Cycle\",\n  \"project\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"status\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"jiraProjectVersion\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"folder\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"description\": \"Regression test cycle 1 to ensure no breaking changes\",\n  \"plannedStartDate\": \"1986-12-10T00:54:26.204Z\",\n  \"plannedEndDate\": \"1992-12-21T13:30:44.156Z\",\n  \"owner\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"customFields\": {\n    \"proident_ca1\": {},\n    \"ipsum_239\": {}\n  },\n  \"links\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"issues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"webLinks\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"testPlans\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/testcycles/:testCycleIdOrKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testcycles",
												":testCycleIdOrKey"
											],
											"variable": [
												{
													"key": "testCycleIdOrKey",
													"value": "202831",
													"description": "(Required) The ID or key of the test cycle. Test cycle keys are of the format [A-Z]+-R[0-9]+"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get test cycles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/testcycles?projectKey=NL181IQFL&folderId=67793148&jiraProjectVersionId=67793148&maxResults=10&startAt=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"testcycles"
							],
							"query": [
								{
									"key": "projectKey",
									"value": "NL181IQFL",
									"description": "Jira project key filter"
								},
								{
									"key": "folderId",
									"value": "67793148",
									"description": "Folder ID filter"
								},
								{
									"key": "jiraProjectVersionId",
									"value": "67793148",
									"description": "JiraProjectVersion ID filter"
								},
								{
									"key": "maxResults",
									"value": "10",
									"description": "A hint as to the maximum number of results to return in each call. Note that the server reserves the right to impose a maxResults limit that is lower than the value that a client provides, due to lack or resources or any other condition. When this happens, your results will be truncated. Callers should always check the returned maxResults to determine the value that is effectively being used."
								},
								{
									"key": "startAt",
									"value": "0",
									"description": "Zero-indexed starting position. Should be a multiple of maxResults."
								}
							]
						},
						"description": "Returns all test cycles. Query parameters can be used to filter by project and folder."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/testcycles?projectKey=NL181IQFL&folderId=67793148&jiraProjectVersionId=67793148&maxResults=10&startAt=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"testcycles"
									],
									"query": [
										{
											"key": "projectKey",
											"value": "NL181IQFL"
										},
										{
											"key": "folderId",
											"value": "67793148"
										},
										{
											"key": "jiraProjectVersionId",
											"value": "67793148"
										},
										{
											"key": "maxResults",
											"value": "10"
										},
										{
											"key": "startAt",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"maxResults\": 1,\n  \"startAt\": 51488608,\n  \"next\": \"ut pariatur elit\",\n  \"total\": 1,\n  \"isLast\": true,\n  \"values\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"project\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jiraProjectVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"folder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"plannedStartDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"plannedEndDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"links\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"project\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jiraProjectVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"folder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"plannedStartDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"plannedEndDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"links\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/testcycles?projectKey=NL181IQFL&folderId=67793148&jiraProjectVersionId=67793148&maxResults=10&startAt=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"testcycles"
									],
									"query": [
										{
											"key": "projectKey",
											"value": "NL181IQFL"
										},
										{
											"key": "folderId",
											"value": "67793148"
										},
										{
											"key": "jiraProjectVersionId",
											"value": "67793148"
										},
										{
											"key": "maxResults",
											"value": "10"
										},
										{
											"key": "startAt",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				},
				{
					"name": "Create a Test Cycle",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Check axial pump\",\n  \"projectKey\": \"TIS\",\n  \"description\": \"Regression test cycle 1 to ensure no breaking changes\",\n  \"plannedStartDate\": \"1988-01-24T13:56:04.122Z\",\n  \"plannedEndDate\": \"2007-11-04T12:13:15.062Z\",\n  \"jiraProjectVersion\": 10000,\n  \"statusName\": \"Low\",\n  \"folderId\": 86772108,\n  \"ownerId\": \"5b10a2844c20165700ede21g\",\n  \"customFields\": {\n    \"sit_e8\": {},\n    \"pariatur_070\": {}\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/testcycles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"testcycles"
							]
						},
						"description": "Creates a Test Cycle. All required test cycle custom fields should be present in the request."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Check axial pump\",\n  \"projectKey\": \"TIS\",\n  \"description\": \"Regression test cycle 1 to ensure no breaking changes\",\n  \"plannedStartDate\": \"1988-01-24T13:56:04.122Z\",\n  \"plannedEndDate\": \"2007-11-04T12:13:15.062Z\",\n  \"jiraProjectVersion\": 10000,\n  \"statusName\": \"Low\",\n  \"folderId\": 86772108,\n  \"ownerId\": \"5b10a2844c20165700ede21g\",\n  \"customFields\": {\n    \"sit_e8\": {},\n    \"pariatur_070\": {}\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/testcycles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"testcycles"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": 1,\n  \"self\": \"qui et anim\",\n  \"key\": \"do officia Ut anim\"\n}"
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Check axial pump\",\n  \"projectKey\": \"TIS\",\n  \"description\": \"Regression test cycle 1 to ensure no breaking changes\",\n  \"plannedStartDate\": \"1988-01-24T13:56:04.122Z\",\n  \"plannedEndDate\": \"2007-11-04T12:13:15.062Z\",\n  \"jiraProjectVersion\": 10000,\n  \"statusName\": \"Low\",\n  \"folderId\": 86772108,\n  \"ownerId\": \"5b10a2844c20165700ede21g\",\n  \"customFields\": {\n    \"sit_e8\": {},\n    \"pariatur_070\": {}\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/testcycles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"testcycles"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "testplans",
			"item": [
				{
					"name": "{testPlanIdOrKey}",
					"item": [
						{
							"name": "links",
							"item": [
								{
									"name": "Create web link",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"A link to atlassian.com\",\n  \"url\": \"https://atlassian.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/testplans/:testPlanIdOrKey/links/weblinks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testplans",
												":testPlanIdOrKey",
												"links",
												"weblinks"
											],
											"variable": [
												{
													"key": "testPlanIdOrKey",
													"value": "gz-pcoi-P78432669",
													"description": "(Required) The ID or key of the test plan. Test plan keys are of the format [A-Z]+-P[0-9]+"
												}
											]
										},
										"description": "Creates a link between a test plan and a generic URL."
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"A link to atlassian.com\",\n  \"url\": \"https://atlassian.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/testplans/:testPlanIdOrKey/links/weblinks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testplans",
														":testPlanIdOrKey",
														"links",
														"weblinks"
													],
													"variable": [
														{
															"key": "testPlanIdOrKey",
															"value": "gz-pcoi-P78432669",
															"description": "(Required) The ID or key of the test plan. Test plan keys are of the format [A-Z]+-P[0-9]+"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": 1,\n  \"self\": \"elit \"\n}"
										},
										{
											"name": "An error has occurred. Please check the code and the error message.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"A link to atlassian.com\",\n  \"url\": \"https://atlassian.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/testplans/:testPlanIdOrKey/links/weblinks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testplans",
														":testPlanIdOrKey",
														"links",
														"weblinks"
													],
													"variable": [
														{
															"key": "testPlanIdOrKey",
															"value": "gz-pcoi-P78432669",
															"description": "(Required) The ID or key of the test plan. Test plan keys are of the format [A-Z]+-P[0-9]+"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
										}
									]
								},
								{
									"name": "Create issue link",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"issueId\": 10100\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/testplans/:testPlanIdOrKey/links/issues",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testplans",
												":testPlanIdOrKey",
												"links",
												"issues"
											],
											"variable": [
												{
													"key": "testPlanIdOrKey",
													"value": "gz-pcoi-P78432669",
													"description": "(Required) The ID or key of the test plan. Test plan keys are of the format [A-Z]+-P[0-9]+"
												}
											]
										},
										"description": "Creates a link between a test plan and a Jira issue."
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"issueId\": 10100\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/testplans/:testPlanIdOrKey/links/issues",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testplans",
														":testPlanIdOrKey",
														"links",
														"issues"
													],
													"variable": [
														{
															"key": "testPlanIdOrKey",
															"value": "gz-pcoi-P78432669",
															"description": "(Required) The ID or key of the test plan. Test plan keys are of the format [A-Z]+-P[0-9]+"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": 1,\n  \"self\": \"elit \"\n}"
										},
										{
											"name": "An error has occurred. Please check the code and the error message.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"issueId\": 10100\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/testplans/:testPlanIdOrKey/links/issues",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testplans",
														":testPlanIdOrKey",
														"links",
														"issues"
													],
													"variable": [
														{
															"key": "testPlanIdOrKey",
															"value": "gz-pcoi-P78432669",
															"description": "(Required) The ID or key of the test plan. Test plan keys are of the format [A-Z]+-P[0-9]+"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
										}
									]
								},
								{
									"name": "Create test cycle link",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"testCycleIdOrKey\": \"O-R212857753\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/testplans/:testPlanIdOrKey/links/testcycles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testplans",
												":testPlanIdOrKey",
												"links",
												"testcycles"
											],
											"variable": [
												{
													"key": "testPlanIdOrKey",
													"value": "gz-pcoi-P78432669",
													"description": "(Required) The ID or key of the test plan. Test plan keys are of the format [A-Z]+-P[0-9]+"
												}
											]
										},
										"description": "Creates a link between a test plan and a test cycle."
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"testCycleIdOrKey\": \"O-R212857753\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/testplans/:testPlanIdOrKey/links/testcycles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testplans",
														":testPlanIdOrKey",
														"links",
														"testcycles"
													],
													"variable": [
														{
															"key": "testPlanIdOrKey",
															"value": "gz-pcoi-P78432669",
															"description": "(Required) The ID or key of the test plan. Test plan keys are of the format [A-Z]+-P[0-9]+"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": 1,\n  \"self\": \"elit \"\n}"
										},
										{
											"name": "An error has occurred. Please check the code and the error message.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"testCycleIdOrKey\": \"O-R212857753\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/testplans/:testPlanIdOrKey/links/testcycles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testplans",
														":testPlanIdOrKey",
														"links",
														"testcycles"
													],
													"variable": [
														{
															"key": "testPlanIdOrKey",
															"value": "gz-pcoi-P78432669",
															"description": "(Required) The ID or key of the test plan. Test plan keys are of the format [A-Z]+-P[0-9]+"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get test plan",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/testplans/:testPlanIdOrKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"testplans",
										":testPlanIdOrKey"
									],
									"variable": [
										{
											"key": "testPlanIdOrKey",
											"value": "gz-pcoi-P78432669",
											"description": "(Required) The ID or key of the test plan. Test plan keys are of the format [A-Z]+-P[0-9]+"
										}
									]
								},
								"description": "Returns a test plan for the given id or key."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/testplans/:testPlanIdOrKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testplans",
												":testPlanIdOrKey"
											],
											"variable": [
												{
													"key": "testPlanIdOrKey",
													"value": "gz-pcoi-P78432669",
													"description": "(Required) The ID or key of the test plan. Test plan keys are of the format [A-Z]+-P[0-9]+"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 1,\n  \"key\": \"SA-P10\",\n  \"name\": \"Check axial pump\",\n  \"project\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"status\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"objective\": \"To ensure the axial pump can be enabled\",\n  \"folder\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"owner\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"customFields\": {\n    \"consequat_f\": {}\n  },\n  \"labels\": [\n    \"Regression\",\n    \"Performance\",\n    \"Automated\"\n  ],\n  \"links\": {\n    \"webLinks\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"issues\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"testCycles\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}"
								},
								{
									"name": "An error has occurred. Please check the code and the error message.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/testplans/:testPlanIdOrKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testplans",
												":testPlanIdOrKey"
											],
											"variable": [
												{
													"key": "testPlanIdOrKey",
													"value": "gz-pcoi-P78432669",
													"description": "(Required) The ID or key of the test plan. Test plan keys are of the format [A-Z]+-P[0-9]+"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get test plans",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/testplans?projectKey=NL181IQFL&maxResults=10&startAt=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"testplans"
							],
							"query": [
								{
									"key": "projectKey",
									"value": "NL181IQFL",
									"description": "Jira project key filter"
								},
								{
									"key": "maxResults",
									"value": "10",
									"description": "A hint as to the maximum number of results to return in each call. Note that the server reserves the right to impose a maxResults limit that is lower than the value that a client provides, due to lack or resources or any other condition. When this happens, your results will be truncated. Callers should always check the returned maxResults to determine the value that is effectively being used."
								},
								{
									"key": "startAt",
									"value": "0",
									"description": "Zero-indexed starting position. Should be a multiple of maxResults."
								}
							]
						},
						"description": "Retrieves all test plans. Query parameters can be used to filter the results."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/testplans?projectKey=NL181IQFL&maxResults=10&startAt=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"testplans"
									],
									"query": [
										{
											"key": "projectKey",
											"value": "NL181IQFL"
										},
										{
											"key": "maxResults",
											"value": "10"
										},
										{
											"key": "startAt",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"maxResults\": 1,\n  \"startAt\": 90991852,\n  \"next\": \"eiusmod consequat Ut\",\n  \"total\": 1,\n  \"isLast\": true,\n  \"values\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"project\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objective\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"folder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"links\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"project\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objective\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"folder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"links\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/testplans?projectKey=NL181IQFL&maxResults=10&startAt=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"testplans"
									],
									"query": [
										{
											"key": "projectKey",
											"value": "NL181IQFL"
										},
										{
											"key": "maxResults",
											"value": "10"
										},
										{
											"key": "startAt",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				},
				{
					"name": "Create test plan",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Check axial pump\",\n  \"projectKey\": \"TIS\",\n  \"objective\": \"To ensure the axial pump can be enabled\",\n  \"folderId\": 97119248,\n  \"statusName\": \"Low\",\n  \"ownerId\": \"5b10a2844c20165700ede21g\",\n  \"labels\": [\n    \"Regression\",\n    \"Performance\",\n    \"Automated\"\n  ],\n  \"customFields\": {\n    \"eiusmodf20\": {},\n    \"Ut_3\": {}\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/testplans",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"testplans"
							]
						},
						"description": "Creates a test plan. All required test plan custom fields should be present in the request."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Check axial pump\",\n  \"projectKey\": \"TIS\",\n  \"objective\": \"To ensure the axial pump can be enabled\",\n  \"folderId\": 97119248,\n  \"statusName\": \"Low\",\n  \"ownerId\": \"5b10a2844c20165700ede21g\",\n  \"labels\": [\n    \"Regression\",\n    \"Performance\",\n    \"Automated\"\n  ],\n  \"customFields\": {\n    \"eiusmodf20\": {},\n    \"Ut_3\": {}\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/testplans",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"testplans"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": 1,\n  \"self\": \"qui et anim\",\n  \"key\": \"do officia Ut anim\"\n}"
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Check axial pump\",\n  \"projectKey\": \"TIS\",\n  \"objective\": \"To ensure the axial pump can be enabled\",\n  \"folderId\": 97119248,\n  \"statusName\": \"Low\",\n  \"ownerId\": \"5b10a2844c20165700ede21g\",\n  \"labels\": [\n    \"Regression\",\n    \"Performance\",\n    \"Automated\"\n  ],\n  \"customFields\": {\n    \"eiusmodf20\": {},\n    \"Ut_3\": {}\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/testplans",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"testplans"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "testexecutions",
			"item": [
				{
					"name": "{testExecutionIdOrKey}",
					"item": [
						{
							"name": "links",
							"item": [
								{
									"name": "Get links",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/testexecutions/:testExecutionIdOrKey/links",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testexecutions",
												":testExecutionIdOrKey",
												"links"
											],
											"variable": [
												{
													"key": "testExecutionIdOrKey",
													"value": "766",
													"description": "(Required) The ID or key of the test execution. Test execution keys are of the format [A-Z]+-E[0-9]+"
												}
											]
										},
										"description": "Returns links for a test execution with specified ID."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/testexecutions/:testExecutionIdOrKey/links",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testexecutions",
														":testExecutionIdOrKey",
														"links"
													],
													"variable": [
														{
															"key": "testExecutionIdOrKey",
															"value": "766",
															"description": "(Required) The ID or key of the test execution. Test execution keys are of the format [A-Z]+-E[0-9]+"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"self\": \"in anim Ut ullamco\",\n  \"issues\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"name": "An error has occurred. Please check the code and the error message.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/testexecutions/:testExecutionIdOrKey/links",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testexecutions",
														":testExecutionIdOrKey",
														"links"
													],
													"variable": [
														{
															"key": "testExecutionIdOrKey",
															"value": "766",
															"description": "(Required) The ID or key of the test execution. Test execution keys are of the format [A-Z]+-E[0-9]+"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
										}
									]
								},
								{
									"name": "Create issue link",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"issueId\": 10100\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/testexecutions/:testExecutionIdOrKey/links/issues",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testexecutions",
												":testExecutionIdOrKey",
												"links",
												"issues"
											],
											"variable": [
												{
													"key": "testExecutionIdOrKey",
													"value": "766",
													"description": "(Required) The ID or key of the test execution. Test execution keys are of the format [A-Z]+-E[0-9]+"
												}
											]
										},
										"description": "Creates a link between a test execution and a Jira issue."
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"issueId\": 10100\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/testexecutions/:testExecutionIdOrKey/links/issues",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testexecutions",
														":testExecutionIdOrKey",
														"links",
														"issues"
													],
													"variable": [
														{
															"key": "testExecutionIdOrKey",
															"value": "766",
															"description": "(Required) The ID or key of the test execution. Test execution keys are of the format [A-Z]+-E[0-9]+"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "location",
													"value": "mollit voluptate",
													"description": "URL of the created link"
												},
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An error has occurred. Please check the code and the error message.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"issueId\": 10100\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/testexecutions/:testExecutionIdOrKey/links/issues",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"testexecutions",
														":testExecutionIdOrKey",
														"links",
														"issues"
													],
													"variable": [
														{
															"key": "testExecutionIdOrKey",
															"value": "766",
															"description": "(Required) The ID or key of the test execution. Test execution keys are of the format [A-Z]+-E[0-9]+"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "mollit voluptate",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get test execution",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/testexecutions/:testExecutionIdOrKey?includeStepLinks=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"testexecutions",
										":testExecutionIdOrKey"
									],
									"query": [
										{
											"key": "includeStepLinks",
											"value": "false",
											"description": "If true, execution step issue links will be included in the response"
										}
									],
									"variable": [
										{
											"key": "testExecutionIdOrKey",
											"value": "766",
											"description": "(Required) The ID or key of the test execution. Test execution keys are of the format [A-Z]+-E[0-9]+"
										}
									]
								},
								"description": "Returns a test execution for the given ID."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/testexecutions/:testExecutionIdOrKey?includeStepLinks=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testexecutions",
												":testExecutionIdOrKey"
											],
											"query": [
												{
													"key": "includeStepLinks",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "testExecutionIdOrKey",
													"value": "766",
													"description": "(Required) The ID or key of the test execution. Test execution keys are of the format [A-Z]+-E[0-9]+"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 1,\n  \"project\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"testCase\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"testExecutionStatus\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"key\": \"SA-E10\",\n  \"environment\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"jiraProjectVersion\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"actualEndDate\": \"1974-11-23T19:17:10.001Z\",\n  \"estimatedTime\": 138000,\n  \"executionTime\": 120000,\n  \"executedById\": \"5b10a2844c20165700ede21g\",\n  \"assignedToId\": \"5b10a2844c20165700ede21g\",\n  \"comment\": \"Test failed user could not login\",\n  \"automated\": true,\n  \"testCycle\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"customFields\": {\n    \"sit78a\": {}\n  },\n  \"links\": {\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"issues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
								},
								{
									"name": "An error has occurred. Please check the code and the error message.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/testexecutions/:testExecutionIdOrKey?includeStepLinks=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"testexecutions",
												":testExecutionIdOrKey"
											],
											"query": [
												{
													"key": "includeStepLinks",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "testExecutionIdOrKey",
													"value": "766",
													"description": "(Required) The ID or key of the test execution. Test execution keys are of the format [A-Z]+-E[0-9]+"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get test executions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/testexecutions?projectKey=NL181IQFL&testCycle=202831&testCase=32536&actualEndDateAfter=2007-04-30T17:53:24.200Z&actualEndDateBefore=2007-04-30T17:53:24.200Z&includeStepLinks=false&jiraProjectVersionId=67793148&onlyLastExecutions=false&maxResults=10&startAt=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"testexecutions"
							],
							"query": [
								{
									"key": "projectKey",
									"value": "NL181IQFL",
									"description": "Jira project key filter"
								},
								{
									"key": "testCycle",
									"value": "202831",
									"description": "Test cycle key filter."
								},
								{
									"key": "testCase",
									"value": "32536",
									"description": "Test case key filter."
								},
								{
									"key": "actualEndDateAfter",
									"value": "2007-04-30T17:53:24.200Z",
									"description": "Filter for 'Actual End Date' after the given time. Format: yyyy-MM-dd'T'HH:mm:ss'Z'"
								},
								{
									"key": "actualEndDateBefore",
									"value": "2007-04-30T17:53:24.200Z",
									"description": "Filter for 'Actual End Date' before the given time. Format: yyyy-MM-dd'T'HH:mm:ss'Z'"
								},
								{
									"key": "includeStepLinks",
									"value": "false",
									"description": "If true, execution step issue links will be included in the response"
								},
								{
									"key": "jiraProjectVersionId",
									"value": "67793148",
									"description": "JiraProjectVersion ID filter"
								},
								{
									"key": "onlyLastExecutions",
									"value": "false",
									"description": "If true, only includes the latest execution of each test case"
								},
								{
									"key": "maxResults",
									"value": "10",
									"description": "A hint as to the maximum number of results to return in each call. Note that the server reserves the right to impose a maxResults limit that is lower than the value that a client provides, due to lack or resources or any other condition. When this happens, your results will be truncated. Callers should always check the returned maxResults to determine the value that is effectively being used."
								},
								{
									"key": "startAt",
									"value": "0",
									"description": "Zero-indexed starting position. Should be a multiple of maxResults."
								}
							]
						},
						"description": "Returns all test executions. Query parameters can be used to filter by project and folder."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/testexecutions?projectKey=NL181IQFL&testCycle=202831&testCase=32536&actualEndDateAfter=2007-04-30T17:53:24.200Z&actualEndDateBefore=2007-04-30T17:53:24.200Z&includeStepLinks=false&jiraProjectVersionId=67793148&onlyLastExecutions=false&maxResults=10&startAt=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"testexecutions"
									],
									"query": [
										{
											"key": "projectKey",
											"value": "NL181IQFL"
										},
										{
											"key": "testCycle",
											"value": "202831"
										},
										{
											"key": "testCase",
											"value": "32536"
										},
										{
											"key": "actualEndDateAfter",
											"value": "2007-04-30T17:53:24.200Z"
										},
										{
											"key": "actualEndDateBefore",
											"value": "2007-04-30T17:53:24.200Z"
										},
										{
											"key": "includeStepLinks",
											"value": "false"
										},
										{
											"key": "jiraProjectVersionId",
											"value": "67793148"
										},
										{
											"key": "onlyLastExecutions",
											"value": "false"
										},
										{
											"key": "maxResults",
											"value": "10"
										},
										{
											"key": "startAt",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"maxResults\": 1,\n  \"startAt\": 88346186,\n  \"next\": \"occaecat commodo fugiat reprehenderit\",\n  \"total\": 1,\n  \"isLast\": true,\n  \"values\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"project\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"testCase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"testExecutionStatus\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"environment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jiraProjectVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"actualEndDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"estimatedTime\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"executionTime\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"executedById\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"assignedToId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"comment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"automated\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"testCycle\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"links\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"project\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"testCase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"testExecutionStatus\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"environment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jiraProjectVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"actualEndDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"estimatedTime\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"executionTime\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"executedById\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"assignedToId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"comment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"automated\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"testCycle\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"links\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/testexecutions?projectKey=NL181IQFL&testCycle=202831&testCase=32536&actualEndDateAfter=2007-04-30T17:53:24.200Z&actualEndDateBefore=2007-04-30T17:53:24.200Z&includeStepLinks=false&jiraProjectVersionId=67793148&onlyLastExecutions=false&maxResults=10&startAt=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"testexecutions"
									],
									"query": [
										{
											"key": "projectKey",
											"value": "NL181IQFL"
										},
										{
											"key": "testCycle",
											"value": "202831"
										},
										{
											"key": "testCase",
											"value": "32536"
										},
										{
											"key": "actualEndDateAfter",
											"value": "2007-04-30T17:53:24.200Z"
										},
										{
											"key": "actualEndDateBefore",
											"value": "2007-04-30T17:53:24.200Z"
										},
										{
											"key": "includeStepLinks",
											"value": "false"
										},
										{
											"key": "jiraProjectVersionId",
											"value": "67793148"
										},
										{
											"key": "onlyLastExecutions",
											"value": "false"
										},
										{
											"key": "maxResults",
											"value": "10"
										},
										{
											"key": "startAt",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				},
				{
					"name": "Create test execution",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"projectKey\": \"TIS\",\n  \"statusName\": \"Low\",\n  \"testCaseKey\": \"SA-T10\",\n  \"testCycleKey\": \"SA-R10\",\n  \"testScriptResults\": [\n    {\n      \"statusName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"actualEndDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"actualResult\": \"User logged in successfully\"\n    },\n    {\n      \"statusName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"actualEndDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"actualResult\": \"User logged in successfully\"\n    }\n  ],\n  \"environmentName\": \"Chrome Latest Version\",\n  \"actualEndDate\": \"2019-08-08T07:37:01.308Z\",\n  \"executionTime\": 120000,\n  \"executedById\": \"5b10a2844c20165700ede21g\",\n  \"assignedToId\": \"5b10a2844c20165700ede21g\",\n  \"comment\": \"Test failed user could not login\",\n  \"customFields\": {\n    \"nulla_4a\": {},\n    \"non_8_\": {},\n    \"Excepteur_2af\": {},\n    \"quis4\": {}\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/testexecutions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"testexecutions"
							]
						},
						"description": "Creates a test execution. All required test execution custom fields should be present in the request."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"projectKey\": \"TIS\",\n  \"statusName\": \"Low\",\n  \"testCaseKey\": \"SA-T10\",\n  \"testCycleKey\": \"SA-R10\",\n  \"testScriptResults\": [\n    {\n      \"statusName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"actualEndDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"actualResult\": \"User logged in successfully\"\n    },\n    {\n      \"statusName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"actualEndDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"actualResult\": \"User logged in successfully\"\n    }\n  ],\n  \"environmentName\": \"Chrome Latest Version\",\n  \"actualEndDate\": \"1956-11-27T20:54:30.352Z\",\n  \"executionTime\": 120000,\n  \"executedById\": \"5b10a2844c20165700ede21g\",\n  \"assignedToId\": \"5b10a2844c20165700ede21g\",\n  \"comment\": \"Test failed user could not login\",\n  \"customFields\": {\n    \"eab2b\": {}\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/testexecutions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"testexecutions"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "location",
									"value": "mollit voluptate",
									"description": "URL of the created Test Execution"
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"projectKey\": \"TIS\",\n  \"statusName\": \"Low\",\n  \"testCaseKey\": \"SA-T10\",\n  \"testCycleKey\": \"SA-R10\",\n  \"testScriptResults\": [\n    {\n      \"statusName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"actualEndDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"actualResult\": \"User logged in successfully\"\n    },\n    {\n      \"statusName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"actualEndDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"actualResult\": \"User logged in successfully\"\n    }\n  ],\n  \"environmentName\": \"Chrome Latest Version\",\n  \"actualEndDate\": \"1956-11-27T20:54:30.352Z\",\n  \"executionTime\": 120000,\n  \"executedById\": \"5b10a2844c20165700ede21g\",\n  \"assignedToId\": \"5b10a2844c20165700ede21g\",\n  \"comment\": \"Test failed user could not login\",\n  \"customFields\": {\n    \"eab2b\": {}\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/testexecutions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"testexecutions"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "projects",
			"item": [
				{
					"name": "Get projects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects?maxResults=10&startAt=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "maxResults",
									"value": "10",
									"description": "A hint as to the maximum number of results to return in each call. Note that the server reserves the right to impose a maxResults limit that is lower than the value that a client provides, due to lack or resources or any other condition. When this happens, your results will be truncated. Callers should always check the returned maxResults to determine the value that is effectively being used."
								},
								{
									"key": "startAt",
									"value": "0",
									"description": "Zero-indexed starting position. Should be a multiple of maxResults."
								}
							]
						},
						"description": "Returns all projects."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects?maxResults=10&startAt=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "maxResults",
											"value": "10"
										},
										{
											"key": "startAt",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"maxResults\": 1,\n  \"startAt\": 41544308,\n  \"next\": \"elit enim proident\",\n  \"total\": 1,\n  \"isLast\": true,\n  \"values\": [\n    {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jiraProjectId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jiraProjectId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects?maxResults=10&startAt=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "maxResults",
											"value": "10"
										},
										{
											"key": "startAt",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				},
				{
					"name": "Get project",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/:projectIdOrKey",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":projectIdOrKey"
							],
							"variable": [
								{
									"key": "projectIdOrKey",
									"value": "XO61Z0MI",
									"description": "(Required) The ID or key of the Jira project"
								}
							]
						},
						"description": "Returns a project for the given ID or key."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:projectIdOrKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":projectIdOrKey"
									],
									"variable": [
										{
											"key": "projectIdOrKey",
											"value": "XO61Z0MI",
											"description": "(Required) The ID or key of the Jira project"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"enabled\": true,\n  \"id\": 42531879,\n  \"jiraProjectId\": -638233,\n  \"key\": \"dolore irure\"\n}"
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:projectIdOrKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":projectIdOrKey"
									],
									"variable": [
										{
											"key": "projectIdOrKey",
											"value": "XO61Z0MI",
											"description": "(Required) The ID or key of the Jira project"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "folders",
			"item": [
				{
					"name": "Get folders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/folders?maxResults=10&startAt=0&projectKey=NL181IQFL&folderType=aute ad",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"folders"
							],
							"query": [
								{
									"key": "maxResults",
									"value": "10",
									"description": "A hint as to the maximum number of results to return in each call. Note that the server reserves the right to impose a maxResults limit that is lower than the value that a client provides, due to lack or resources or any other condition. When this happens, your results will be truncated. Callers should always check the returned maxResults to determine the value that is effectively being used."
								},
								{
									"key": "startAt",
									"value": "0",
									"description": "Zero-indexed starting position. Should be a multiple of maxResults."
								},
								{
									"key": "projectKey",
									"value": "NL181IQFL",
									"description": "Jira project key filter"
								},
								{
									"key": "folderType",
									"value": "aute ad",
									"description": "Folder type filter. Either `\"TEST_CASE\"`, `\"TEST_PLAN\"` or `\"TEST_CYCLE\"`"
								}
							]
						},
						"description": "Returns all folder."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/folders?maxResults=10&startAt=0&projectKey=NL181IQFL&folderType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders"
									],
									"query": [
										{
											"key": "maxResults",
											"value": "10"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "projectKey",
											"value": "NL181IQFL"
										},
										{
											"key": "folderType",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"maxResults\": 1,\n  \"startAt\": 36869747,\n  \"next\": \"consecte\",\n  \"total\": 1,\n  \"isLast\": true,\n  \"values\": [\n    {\n      \"folderType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"index\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"parentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"project\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"folderType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"index\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"parentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"project\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/folders?maxResults=10&startAt=0&projectKey=NL181IQFL&folderType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders"
									],
									"query": [
										{
											"key": "maxResults",
											"value": "10"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "projectKey",
											"value": "NL181IQFL"
										},
										{
											"key": "folderType",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				},
				{
					"name": "Create folder",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"folderType\": \"<string>\",\n  \"name\": \"ex eiusmod sit in\",\n  \"projectKey\": \"TIS\",\n  \"parentId\": 50568893\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/folders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"folders"
							]
						},
						"description": "Creates a folder."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"folderType\": \"<string>\",\n  \"name\": \"ex eiusmod sit in\",\n  \"projectKey\": \"TIS\",\n  \"parentId\": 50568893\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/folders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": 1,\n  \"self\": \"elit \"\n}"
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"folderType\": \"<string>\",\n  \"name\": \"ex eiusmod sit in\",\n  \"projectKey\": \"TIS\",\n  \"parentId\": 50568893\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/folders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				},
				{
					"name": "Get folder",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/folders/:folderId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"folders",
								":folderId"
							],
							"variable": [
								{
									"key": "folderId",
									"value": "67793148",
									"description": "(Required) Folder ID"
								}
							]
						},
						"description": "Returns a folder for the given ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/folders/:folderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										":folderId"
									],
									"variable": [
										{
											"key": "folderId",
											"value": "67793148",
											"description": "(Required) Folder ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"folderType\": \"<string>\",\n  \"id\": 1,\n  \"index\": 1,\n  \"name\": \"Check axial pump\",\n  \"parentId\": 1,\n  \"project\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/folders/:folderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										":folderId"
									],
									"variable": [
										{
											"key": "folderId",
											"value": "67793148",
											"description": "(Required) Folder ID"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "priorities",
			"item": [
				{
					"name": "{priorityId}",
					"item": [
						{
							"name": "Get priority",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/priorities/:priorityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"priorities",
										":priorityId"
									],
									"variable": [
										{
											"key": "priorityId",
											"value": "67793148",
											"description": "(Required) "
										}
									]
								},
								"description": "Returns a priority for the given ID."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/priorities/:priorityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"priorities",
												":priorityId"
											],
											"variable": [
												{
													"key": "priorityId",
													"value": "67793148",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 1,\n  \"index\": 1,\n  \"name\": \"Check axial pump\",\n  \"project\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"Regression test cycle 1 to ensure no breaking changes\",\n  \"color\": \"#FFF or #FFFFFF\",\n  \"default\": false\n}"
								},
								{
									"name": "An error has occurred. Please check the code and the error message.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/priorities/:priorityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"priorities",
												":priorityId"
											],
											"variable": [
												{
													"key": "priorityId",
													"value": "67793148",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
								}
							]
						},
						{
							"name": "Update priority",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"default\": true,\n  \"id\": 1,\n  \"index\": 1,\n  \"name\": \"Critical\",\n  \"project\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"description\": \"Top level priority\",\n  \"color\": \"#FFF or #FFFFFF\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/priorities/:priorityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"priorities",
										":priorityId"
									],
									"variable": [
										{
											"key": "priorityId",
											"value": "67793148",
											"description": "(Required) "
										}
									]
								},
								"description": "Update an existing priority."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"default\": true,\n  \"id\": 1,\n  \"index\": 1,\n  \"name\": \"Critical\",\n  \"project\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"description\": \"Top level priority\",\n  \"color\": \"#FFF or #FFFFFF\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/priorities/:priorityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"priorities",
												":priorityId"
											],
											"variable": [
												{
													"key": "priorityId",
													"value": "67793148",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An error has occurred. Please check the code and the error message.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"default\": true,\n  \"id\": 1,\n  \"index\": 1,\n  \"name\": \"Critical\",\n  \"project\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"description\": \"Top level priority\",\n  \"color\": \"#FFF or #FFFFFF\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/priorities/:priorityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"priorities",
												":priorityId"
											],
											"variable": [
												{
													"key": "priorityId",
													"value": "67793148",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get priorities",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/priorities?maxResults=10&startAt=0&projectKey=NL181IQFL",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"priorities"
							],
							"query": [
								{
									"key": "maxResults",
									"value": "10",
									"description": "A hint as to the maximum number of results to return in each call. Note that the server reserves the right to impose a maxResults limit that is lower than the value that a client provides, due to lack or resources or any other condition. When this happens, your results will be truncated. Callers should always check the returned maxResults to determine the value that is effectively being used."
								},
								{
									"key": "startAt",
									"value": "0",
									"description": "Zero-indexed starting position. Should be a multiple of maxResults."
								},
								{
									"key": "projectKey",
									"value": "NL181IQFL",
									"description": "Jira project key filter"
								}
							]
						},
						"description": "Returns all priorities."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/priorities?maxResults=10&startAt=0&projectKey=NL181IQFL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"priorities"
									],
									"query": [
										{
											"key": "maxResults",
											"value": "10"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "projectKey",
											"value": "NL181IQFL"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"maxResults\": 1,\n  \"startAt\": 28019164,\n  \"next\": \"ipsum ea\",\n  \"total\": 1,\n  \"isLast\": true,\n  \"values\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/priorities?maxResults=10&startAt=0&projectKey=NL181IQFL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"priorities"
									],
									"query": [
										{
											"key": "maxResults",
											"value": "10"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "projectKey",
											"value": "NL181IQFL"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				},
				{
					"name": "Create a priority",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Critical\",\n  \"projectKey\": \"TIS\",\n  \"description\": \"Top level priority\",\n  \"color\": \"#FFF or #FFFFFF\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/priorities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"priorities"
							]
						},
						"description": "Creates a priority."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Critical\",\n  \"projectKey\": \"TIS\",\n  \"description\": \"Top level priority\",\n  \"color\": \"#FFF or #FFFFFF\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/priorities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"priorities"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": 1,\n  \"self\": \"elit \"\n}"
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Critical\",\n  \"projectKey\": \"TIS\",\n  \"description\": \"Top level priority\",\n  \"color\": \"#FFF or #FFFFFF\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/priorities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"priorities"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "statuses",
			"item": [
				{
					"name": "{statusId}",
					"item": [
						{
							"name": "Get status",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/statuses/:statusId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"statuses",
										":statusId"
									],
									"variable": [
										{
											"key": "statusId",
											"value": "67793148",
											"description": "(Required) "
										}
									]
								},
								"description": "Returns a status for the given ID."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/statuses/:statusId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"statuses",
												":statusId"
											],
											"variable": [
												{
													"key": "statusId",
													"value": "67793148",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 1,\n  \"index\": 1,\n  \"name\": \"Check axial pump\",\n  \"project\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"Regression test cycle 1 to ensure no breaking changes\",\n  \"color\": \"laborum sint sed f\",\n  \"archived\": false,\n  \"default\": false\n}"
								},
								{
									"name": "An error has occurred. Please check the code and the error message.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/statuses/:statusId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"statuses",
												":statusId"
											],
											"variable": [
												{
													"key": "statusId",
													"value": "67793148",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
								}
							]
						},
						{
							"name": "Update status",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"archived\": true,\n  \"default\": false,\n  \"id\": 1,\n  \"index\": 1,\n  \"name\": \"Low\",\n  \"project\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"description\": \"An important status\",\n  \"color\": \"#FFF or #FFFFFF\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/statuses/:statusId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"statuses",
										":statusId"
									],
									"variable": [
										{
											"key": "statusId",
											"value": "67793148",
											"description": "(Required) "
										}
									]
								},
								"description": "Update an existing status."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"archived\": true,\n  \"default\": false,\n  \"id\": 1,\n  \"index\": 1,\n  \"name\": \"Low\",\n  \"project\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"description\": \"An important status\",\n  \"color\": \"#FFF or #FFFFFF\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/statuses/:statusId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"statuses",
												":statusId"
											],
											"variable": [
												{
													"key": "statusId",
													"value": "67793148",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An error has occurred. Please check the code and the error message.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"archived\": true,\n  \"default\": false,\n  \"id\": 1,\n  \"index\": 1,\n  \"name\": \"Low\",\n  \"project\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"description\": \"An important status\",\n  \"color\": \"#FFF or #FFFFFF\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/statuses/:statusId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"statuses",
												":statusId"
											],
											"variable": [
												{
													"key": "statusId",
													"value": "67793148",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get statuses",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/statuses?maxResults=10&startAt=0&projectKey=NL181IQFL&statusType=do mollit aliquip nisi adipisicing",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"statuses"
							],
							"query": [
								{
									"key": "maxResults",
									"value": "10",
									"description": "A hint as to the maximum number of results to return in each call. Note that the server reserves the right to impose a maxResults limit that is lower than the value that a client provides, due to lack or resources or any other condition. When this happens, your results will be truncated. Callers should always check the returned maxResults to determine the value that is effectively being used."
								},
								{
									"key": "startAt",
									"value": "0",
									"description": "Zero-indexed starting position. Should be a multiple of maxResults."
								},
								{
									"key": "projectKey",
									"value": "NL181IQFL",
									"description": "Jira project key filter"
								},
								{
									"key": "statusType",
									"value": "do mollit aliquip nisi adipisicing"
								}
							]
						},
						"description": "Returns all statuses."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/statuses?maxResults=10&startAt=0&projectKey=NL181IQFL&statusType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"statuses"
									],
									"query": [
										{
											"key": "maxResults",
											"value": "10"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "projectKey",
											"value": "NL181IQFL"
										},
										{
											"key": "statusType",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"maxResults\": 1,\n  \"startAt\": 28019164,\n  \"next\": \"ipsum ea\",\n  \"total\": 1,\n  \"isLast\": true,\n  \"values\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/statuses?maxResults=10&startAt=0&projectKey=NL181IQFL&statusType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"statuses"
									],
									"query": [
										{
											"key": "maxResults",
											"value": "10"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "projectKey",
											"value": "NL181IQFL"
										},
										{
											"key": "statusType",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				},
				{
					"name": "Create a status",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Low\",\n  \"projectKey\": \"TIS\",\n  \"type\": \"<string>\",\n  \"description\": \"An important status\",\n  \"color\": \"#FFF or #FFFFFF\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/statuses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"statuses"
							]
						},
						"description": "Creates a status."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Low\",\n  \"projectKey\": \"TIS\",\n  \"type\": \"<string>\",\n  \"description\": \"An important status\",\n  \"color\": \"#FFF or #FFFFFF\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/statuses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"statuses"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": 1,\n  \"self\": \"elit \"\n}"
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Low\",\n  \"projectKey\": \"TIS\",\n  \"type\": \"<string>\",\n  \"description\": \"An important status\",\n  \"color\": \"#FFF or #FFFFFF\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/statuses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"statuses"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "environments",
			"item": [
				{
					"name": "Get environments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/environments?projectKey=NL181IQFL&maxResults=10&startAt=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"environments"
							],
							"query": [
								{
									"key": "projectKey",
									"value": "NL181IQFL",
									"description": "Jira project key filter"
								},
								{
									"key": "maxResults",
									"value": "10",
									"description": "A hint as to the maximum number of results to return in each call. Note that the server reserves the right to impose a maxResults limit that is lower than the value that a client provides, due to lack or resources or any other condition. When this happens, your results will be truncated. Callers should always check the returned maxResults to determine the value that is effectively being used."
								},
								{
									"key": "startAt",
									"value": "0",
									"description": "Zero-indexed starting position. Should be a multiple of maxResults."
								}
							]
						},
						"description": "Returns all environments."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/environments?projectKey=NL181IQFL&maxResults=10&startAt=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "projectKey",
											"value": "NL181IQFL"
										},
										{
											"key": "maxResults",
											"value": "10"
										},
										{
											"key": "startAt",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"maxResults\": 1,\n  \"startAt\": 28019164,\n  \"next\": \"ipsum ea\",\n  \"total\": 1,\n  \"isLast\": true,\n  \"values\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/environments?projectKey=NL181IQFL&maxResults=10&startAt=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "projectKey",
											"value": "NL181IQFL"
										},
										{
											"key": "maxResults",
											"value": "10"
										},
										{
											"key": "startAt",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				},
				{
					"name": "Get environment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/environments/:environmentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"environments",
								":environmentId"
							],
							"variable": [
								{
									"key": "environmentId",
									"value": "67793148",
									"description": "(Required) "
								}
							]
						},
						"description": "Returns an environment for the given ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/environments/:environmentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments",
										":environmentId"
									],
									"variable": [
										{
											"key": "environmentId",
											"value": "67793148",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": 1,\n  \"index\": 1,\n  \"name\": \"Check axial pump\",\n  \"project\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"Regression test cycle 1 to ensure no breaking changes\",\n  \"archived\": false\n}"
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/environments/:environmentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments",
										":environmentId"
									],
									"variable": [
										{
											"key": "environmentId",
											"value": "67793148",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "issuelinks/{issueKey}",
			"item": [
				{
					"name": "Get test cases",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/issuelinks/:issueKey/testcases",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"issuelinks",
								":issueKey",
								"testcases"
							],
							"variable": [
								{
									"key": "issueKey",
									"value": "Et7Wg@-49618",
									"description": "(Required) The key of the Jira issue"
								}
							]
						},
						"description": "Get test case keys and versions linked to the given Jira issue."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/issuelinks/:issueKey/testcases",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"issuelinks",
										":issueKey",
										"testcases"
									],
									"variable": [
										{
											"key": "issueKey",
											"value": "Et7Wg@-49618",
											"description": "(Required) The key of the Jira issue"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"version\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"version\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/issuelinks/:issueKey/testcases",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"issuelinks",
										":issueKey",
										"testcases"
									],
									"variable": [
										{
											"key": "issueKey",
											"value": "Et7Wg@-49618",
											"description": "(Required) The key of the Jira issue"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				},
				{
					"name": "Get test cycles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/issuelinks/:issueKey/testcycles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"issuelinks",
								":issueKey",
								"testcycles"
							],
							"variable": [
								{
									"key": "issueKey",
									"value": "Et7Wg@-49618",
									"description": "(Required) The key of the Jira issue"
								}
							]
						},
						"description": "Get test cycle IDs linked to the given Jira issue."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/issuelinks/:issueKey/testcycles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"issuelinks",
										":issueKey",
										"testcycles"
									],
									"variable": [
										{
											"key": "issueKey",
											"value": "Et7Wg@-49618",
											"description": "(Required) The key of the Jira issue"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/issuelinks/:issueKey/testcycles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"issuelinks",
										":issueKey",
										"testcycles"
									],
									"variable": [
										{
											"key": "issueKey",
											"value": "Et7Wg@-49618",
											"description": "(Required) The key of the Jira issue"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				},
				{
					"name": "Get test plans",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/issuelinks/:issueKey/testplans",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"issuelinks",
								":issueKey",
								"testplans"
							],
							"variable": [
								{
									"key": "issueKey",
									"value": "Et7Wg@-49618",
									"description": "(Required) The key of the Jira issue"
								}
							]
						},
						"description": "Get test plan IDs linked to the given Jira issue."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/issuelinks/:issueKey/testplans",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"issuelinks",
										":issueKey",
										"testplans"
									],
									"variable": [
										{
											"key": "issueKey",
											"value": "Et7Wg@-49618",
											"description": "(Required) The key of the Jira issue"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/issuelinks/:issueKey/testplans",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"issuelinks",
										":issueKey",
										"testplans"
									],
									"variable": [
										{
											"key": "issueKey",
											"value": "Et7Wg@-49618",
											"description": "(Required) The key of the Jira issue"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				},
				{
					"name": "Get test executions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/issuelinks/:issueKey/executions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"issuelinks",
								":issueKey",
								"executions"
							],
							"variable": [
								{
									"key": "issueKey",
									"value": "Et7Wg@-49618",
									"description": "(Required) The key of the Jira issue"
								}
							]
						},
						"description": "Get test execution IDs linked to the given Jira issue."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/issuelinks/:issueKey/executions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"issuelinks",
										":issueKey",
										"executions"
									],
									"variable": [
										{
											"key": "issueKey",
											"value": "Et7Wg@-49618",
											"description": "(Required) The key of the Jira issue"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"self\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/issuelinks/:issueKey/executions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"issuelinks",
										":issueKey",
										"executions"
									],
									"variable": [
										{
											"key": "issueKey",
											"value": "Et7Wg@-49618",
											"description": "(Required) The key of the Jira issue"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "automations",
			"item": [
				{
					"name": "executions",
					"item": [
						{
							"name": "Custom format",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The content-length header indicates the size of the message body, in bytes. https://datatracker.ietf.org/doc/html/rfc7230#section-3.3.2",
										"key": "content-length",
										"value": "69236495"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) ",
											"type": "file",
											"src": []
										},
										{
											"key": "testCycle",
											"value": "{\"name\":\"Check axial pump\",\"description\":\"Regression test cycle 1 to ensure no breaking changes\",\"jiraProjectVersion\":10000,\"folderId\":94558336,\"customFields\":{\"incididunt66\":{}}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/automations/executions/custom?projectKey=NL181IQFL&autoCreateTestCases=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"automations",
										"executions",
										"custom"
									],
									"query": [
										{
											"key": "projectKey",
											"value": "NL181IQFL",
											"description": "(Required) Jira project key filter"
										},
										{
											"key": "autoCreateTestCases",
											"value": "false",
											"description": "Indicate if test cases should be created if non existent."
										}
									]
								},
								"description": "Create results using Zephyr Scale's custom results format."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) The content-length header indicates the size of the message body, in bytes. https://datatracker.ietf.org/doc/html/rfc7230#section-3.3.2",
												"key": "content-length",
												"value": "69236495"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"description": "(Required) ",
													"type": "file",
													"src": []
												},
												{
													"key": "testCycle",
													"value": "{\"name\":\"Check axial pump\",\"description\":\"Regression test cycle 1 to ensure no breaking changes\",\"jiraProjectVersion\":10000,\"folderId\":94558336,\"customFields\":{\"incididunt66\":{}}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/automations/executions/custom?projectKey=NL181IQFL&autoCreateTestCases=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"automations",
												"executions",
												"custom"
											],
											"query": [
												{
													"key": "projectKey",
													"value": "NL181IQFL"
												},
												{
													"key": "autoCreateTestCases",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"testCycle\": {\n    \"id\": 16945517,\n    \"url\": \"veniam\",\n    \"key\": \"!Q$h!^\\\"-R8310699\"\n  }\n}"
								},
								{
									"name": "An error has occurred. Please check the code and the error message.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) The content-length header indicates the size of the message body, in bytes. https://datatracker.ietf.org/doc/html/rfc7230#section-3.3.2",
												"key": "content-length",
												"value": "69236495"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"description": "(Required) ",
													"type": "file",
													"src": []
												},
												{
													"key": "testCycle",
													"value": "{\"name\":\"Check axial pump\",\"description\":\"Regression test cycle 1 to ensure no breaking changes\",\"jiraProjectVersion\":10000,\"folderId\":94558336,\"customFields\":{\"incididunt66\":{}}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/automations/executions/custom?projectKey=NL181IQFL&autoCreateTestCases=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"automations",
												"executions",
												"custom"
											],
											"query": [
												{
													"key": "projectKey",
													"value": "NL181IQFL"
												},
												{
													"key": "autoCreateTestCases",
													"value": "false"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
								}
							]
						},
						{
							"name": "Cucumber format",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The content-length header indicates the size of the message body, in bytes. https://datatracker.ietf.org/doc/html/rfc7230#section-3.3.2",
										"key": "content-length",
										"value": "69236495"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) ",
											"type": "file",
											"src": []
										},
										{
											"key": "testCycle",
											"value": "{\"name\":\"Check axial pump\",\"description\":\"Regression test cycle 1 to ensure no breaking changes\",\"jiraProjectVersion\":10000,\"folderId\":94558336,\"customFields\":{\"incididunt66\":{}}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/automations/executions/cucumber?projectKey=NL181IQFL&autoCreateTestCases=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"automations",
										"executions",
										"cucumber"
									],
									"query": [
										{
											"key": "projectKey",
											"value": "NL181IQFL",
											"description": "(Required) Jira project key filter"
										},
										{
											"key": "autoCreateTestCases",
											"value": "false",
											"description": "Indicate if test cases should be created if non existent."
										}
									]
								},
								"description": "Create results using the Cucumber results format."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) The content-length header indicates the size of the message body, in bytes. https://datatracker.ietf.org/doc/html/rfc7230#section-3.3.2",
												"key": "content-length",
												"value": "69236495"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"description": "(Required) ",
													"type": "file",
													"src": []
												},
												{
													"key": "testCycle",
													"value": "{\"name\":\"Check axial pump\",\"description\":\"Regression test cycle 1 to ensure no breaking changes\",\"jiraProjectVersion\":10000,\"folderId\":94558336,\"customFields\":{\"incididunt66\":{}}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/automations/executions/cucumber?projectKey=NL181IQFL&autoCreateTestCases=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"automations",
												"executions",
												"cucumber"
											],
											"query": [
												{
													"key": "projectKey",
													"value": "NL181IQFL"
												},
												{
													"key": "autoCreateTestCases",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"testCycle\": {\n    \"id\": 16945517,\n    \"url\": \"veniam\",\n    \"key\": \"!Q$h!^\\\"-R8310699\"\n  }\n}"
								},
								{
									"name": "An error has occurred. Please check the code and the error message.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) The content-length header indicates the size of the message body, in bytes. https://datatracker.ietf.org/doc/html/rfc7230#section-3.3.2",
												"key": "content-length",
												"value": "69236495"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"description": "(Required) ",
													"type": "file",
													"src": []
												},
												{
													"key": "testCycle",
													"value": "{\"name\":\"Check axial pump\",\"description\":\"Regression test cycle 1 to ensure no breaking changes\",\"jiraProjectVersion\":10000,\"folderId\":94558336,\"customFields\":{\"incididunt66\":{}}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/automations/executions/cucumber?projectKey=NL181IQFL&autoCreateTestCases=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"automations",
												"executions",
												"cucumber"
											],
											"query": [
												{
													"key": "projectKey",
													"value": "NL181IQFL"
												},
												{
													"key": "autoCreateTestCases",
													"value": "false"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
								}
							]
						},
						{
							"name": "JUnit XML format",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The content-length header indicates the size of the message body, in bytes. https://datatracker.ietf.org/doc/html/rfc7230#section-3.3.2",
										"key": "content-length",
										"value": "69236495"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) ",
											"type": "file",
											"src": []
										},
										{
											"key": "testCycle",
											"value": "{\"name\":\"Check axial pump\",\"description\":\"Regression test cycle 1 to ensure no breaking changes\",\"jiraProjectVersion\":10000,\"folderId\":94558336,\"customFields\":{\"incididunt66\":{}}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/automations/executions/junit?projectKey=NL181IQFL&autoCreateTestCases=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"automations",
										"executions",
										"junit"
									],
									"query": [
										{
											"key": "projectKey",
											"value": "NL181IQFL",
											"description": "(Required) Jira project key filter"
										},
										{
											"key": "autoCreateTestCases",
											"value": "false",
											"description": "Indicate if test cases should be created if non existent."
										}
									]
								},
								"description": "Create results using the JUnit XML results format. Optionally, you can send a `testCycle` part in your form data to customize the created test cycle."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) The content-length header indicates the size of the message body, in bytes. https://datatracker.ietf.org/doc/html/rfc7230#section-3.3.2",
												"key": "content-length",
												"value": "69236495"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"description": "(Required) ",
													"type": "file",
													"src": []
												},
												{
													"key": "testCycle",
													"value": "{\"name\":\"Check axial pump\",\"description\":\"Regression test cycle 1 to ensure no breaking changes\",\"jiraProjectVersion\":10000,\"folderId\":94558336,\"customFields\":{\"incididunt66\":{}}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/automations/executions/junit?projectKey=NL181IQFL&autoCreateTestCases=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"automations",
												"executions",
												"junit"
											],
											"query": [
												{
													"key": "projectKey",
													"value": "NL181IQFL"
												},
												{
													"key": "autoCreateTestCases",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"testCycle\": {\n    \"id\": 16945517,\n    \"url\": \"veniam\",\n    \"key\": \"!Q$h!^\\\"-R8310699\"\n  }\n}"
								},
								{
									"name": "An error has occurred. Please check the code and the error message.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) The content-length header indicates the size of the message body, in bytes. https://datatracker.ietf.org/doc/html/rfc7230#section-3.3.2",
												"key": "content-length",
												"value": "69236495"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"description": "(Required) ",
													"type": "file",
													"src": []
												},
												{
													"key": "testCycle",
													"value": "{\"name\":\"Check axial pump\",\"description\":\"Regression test cycle 1 to ensure no breaking changes\",\"jiraProjectVersion\":10000,\"folderId\":94558336,\"customFields\":{\"incididunt66\":{}}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/automations/executions/junit?projectKey=NL181IQFL&autoCreateTestCases=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"automations",
												"executions",
												"junit"
											],
											"query": [
												{
													"key": "projectKey",
													"value": "NL181IQFL"
												},
												{
													"key": "autoCreateTestCases",
													"value": "false"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mollit voluptate",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Retrieve a zip file containing Cucumber Feature Files that matches the query passed as parameter.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/zip"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/automations/testcases?projectKey=NL181IQFL",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"automations",
								"testcases"
							],
							"query": [
								{
									"key": "projectKey",
									"value": "NL181IQFL",
									"description": "(Required) Jira project key filter"
								}
							]
						}
					},
					"response": [
						{
							"name": "A Zip file containing BDD feature files",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									},
									{
										"description": "(Required) ",
										"key": "Accept",
										"value": "application/zip"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/automations/testcases?projectKey=NL181IQFL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"automations",
										"testcases"
									],
									"query": [
										{
											"key": "projectKey",
											"value": "NL181IQFL"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/zip"
								}
							],
							"cookie": [],
							"body": "mollit voluptate"
						},
						{
							"name": "An error has occurred. Please check the code and the error message.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									},
									{
										"description": "(Required) ",
										"key": "Accept",
										"value": "application/zip"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/automations/testcases?projectKey=NL181IQFL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"automations",
										"testcases"
									],
									"query": [
										{
											"key": "projectKey",
											"value": "NL181IQFL"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "mollit voluptate",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Delete link",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/links/:linkId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"links",
						":linkId"
					],
					"variable": [
						{
							"key": "linkId",
							"value": "67793148",
							"description": "(Required) "
						}
					]
				},
				"description": "Deletes a link for the given ID."
			},
			"response": [
				{
					"name": "OK",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/links/:linkId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"links",
								":linkId"
							],
							"variable": [
								{
									"key": "linkId",
									"value": "67793148",
									"description": "(Required) "
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Access-Control-Allow-Headers",
							"value": "mollit voluptate",
							"description": ""
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "mollit voluptate",
							"description": ""
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "mollit voluptate",
							"description": ""
						},
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "An error has occurred. Please check the code and the error message.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/links/:linkId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"links",
								":linkId"
							],
							"variable": [
								{
									"key": "linkId",
									"value": "67793148",
									"description": "(Required) "
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Headers",
							"value": "mollit voluptate",
							"description": ""
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "mollit voluptate",
							"description": ""
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "mollit voluptate",
							"description": ""
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
				}
			]
		},
		{
			"name": "Check the health of this API",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/healthcheck",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"healthcheck"
					]
				}
			},
			"response": [
				{
					"name": "OK",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/healthcheck",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"healthcheck"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Access-Control-Allow-Headers",
							"value": "mollit voluptate",
							"description": ""
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "mollit voluptate",
							"description": ""
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "mollit voluptate",
							"description": ""
						},
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "An error has occurred. Please check the code and the error message.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/healthcheck",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"healthcheck"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Headers",
							"value": "mollit voluptate",
							"description": ""
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "mollit voluptate",
							"description": ""
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "mollit voluptate",
							"description": ""
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errorCode\": 400,\n  \"message\": \"projectKey must not be null\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{apiKey}}",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.zephyrscale.smartbear.com/v2",
			"type": "string"
		}
	]
}